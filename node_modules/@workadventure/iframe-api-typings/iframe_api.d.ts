interface WorkAdventureApi {
    sendChatMessage(message: string, author: string): void;
    onChatMessage(callback: (message: string) => void): void;
    onEnterZone(name: string, callback: () => void): void;
    onLeaveZone(name: string, callback: () => void): void;
    openPopup(targetObject: string, message: string, buttons: ButtonDescriptor[]): Popup;
    openTab(url: string): void;
    goToPage(url: string): void;
    openCoWebSite(url: string): void;
    closeCoWebSite(): void;
    disablePlayerControl(): void;
    restorePlayerControl(): void;
    displayBubble(): void;
    removeBubble(): void;
}
declare global {
    var WA: WorkAdventureApi;
}
declare type ButtonClickedCallback = (popup: Popup) => void;
interface ButtonDescriptor {
    /**
     * The label of the button
     */
    label: string;
    /**
     * The type of the button. Can be one of "normal", "primary", "success", "warning", "error", "disabled"
     */
    className?: "normal" | "primary" | "success" | "warning" | "error" | "disabled";
    /**
     * Callback called if the button is pressed
     */
    callback: ButtonClickedCallback;
}
declare class Popup {
    private id;
    constructor(id: number);
    /**
     * Closes the popup
     */
    close(): void;
}
export {};
